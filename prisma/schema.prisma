// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String    @db.VarChar(30)
  surname   String    @db.VarChar(30)
  username  String    @db.VarChar(15)
  email     String    @unique
  password  String    
  reviews   Review[]
  comments  Comment[]
}

model Review {
  id            Int       @id @default(autoincrement())
  title         String    @db.VarChar(30)
  description   String
  datePosted    DateTime  @default(now())
  helpfulCount  Int       @default(0)
  user          User?      @relation(fields: [userId], references: [id])
  userId        Int?
  business      Business?  @relation(fields: [businessId], references: [id])
  businessId    Int?       @unique
  comments      Comment?
}

model Comment {
  id          Int       @id @default(autoincrement())
  text        String
  datePosted  DateTime  @default(now())
  review      Review    @relation(fields: [reviewId], references: [id])
  reviewId    Int       @unique
  user        User?      @relation(fields: [userId], references: [id])
  userId      Int?
}

model Business {
  id              Int           @id @default(autoincrement())
  name            String
  description     String
  website         String
  phoneNumber     Int
  email           String
  address         String
  averageRating   Float         @default(0)
  numberOfRatings Int           @default(0)
  reviews         Review?
  categoryId      Int
  subcategoryId   Int?
  category        Category      @relation(fields: [categoryId], references: [id])
  subcategories    Subcategory?   @relation(fields: [subcategoryId], references: [id])
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  businesses  Business[]
  subcategories Subcategory[]
}

model Subcategory {
  id          Int           @id @default(autoincrement())
  name        String
  businesses  Business[]
  categoryId  Int
  category    Category      @relation(fields: [categoryId], references: [id])
}

